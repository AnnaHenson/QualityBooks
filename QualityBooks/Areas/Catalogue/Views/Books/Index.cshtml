@model PaginatedList<QualityBooks.Models.Book>

@{
    ViewData["Title"] = "Books";
}

<h2>Books</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name or price <input type="text" name="searchString"  value="@ViewData["CurrentFilter"]"/>
            <input type="submit" value="Search" class="btn btn-default"/>
            <a asp-action="Index">Back to full list</a>
        </p>
    </div>
</form>

<div class="album py-5 bg-light">
    <div class="container">
        <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4 shadow-sm">
                    @if (!string.IsNullOrEmpty(item.Image))
                    {
                        <img src="@Href(item.Image)" class="img-thumbnail" style="width: 100%;height:225px"/>
                    }
                    else
                    {
                        <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail">
                            <title>Placeholder</title>
                            <rect with="100%" height="100%" fill="#55595c"></rect>
                            <text x="40%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text>
                        </svg>
                    }
                    <div class="card-body">
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Title)</p>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                        <small class="text-muted">@Html.DisplayFor(modelItem => item.Price)</small>
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group">
                                @if (User.IsInRole("Admin"))
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary" role="button">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                                }
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                                
                            </div>
                            <div style="margin-top: 10px">
                                <a asp-action="AddToCart" asp-controller="ShoppingCart" asp-route-id="@item.Id" >
                                    <span class="glyphicon glyphicon-shopping-cart"></span>
                                    Add To Cart
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        </div>
    </div>
</div>
<br />


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex -1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default@nextDisabled">
    Next
    </a>
   


                                                       

   
